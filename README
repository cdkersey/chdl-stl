CHDL Standard Template Library
==============================

The CHDL STL is an auxilliary library of useful components that are considered
secondary to the CHDL core. These may be distributed alongside CHDL but retain
an identity as a separately-maintained, separately-tested entity, depending on
the core features provided by CHDL.

Contents
--------

  1 API Documentation
    1.1 Queue
    1.2 Stack
    1.3 Map
  2 Examples

1 API Documentation
-------------------

1.1 Queue
---------

Description:

  A 2^SZ-entry queue

  template <typename T, unsigned SZ>
    T Queue(T input, node push, node pop, bvec<SZ + 1> &sz);

  Template parameters:
    T  - The type of objects in the queue.
    SZ - LOG2 of the number of entries in the queue.

  Inputs:
    input - The item to be enqueued during any cycle in which push is high.
    push  - The "push" command.
    pop   - The "pop" command.

  Outputs:
    sz      - Current number of items in the queue.
    returns - The head of the queue.

1.2 Stack
---------

Description:

  A 2^SZ-entry stack

  template <typename T, unsigned SZ>
    T Stack(T input, node push, node pop, bvec<SZ + 1> &sz);

  Template parameters:
    T  - The type of objects in the stack.
    SZ - LOG2 of the number of entries in the stack.

  Inputs:
    input - The item to be pushed during any cycle in which push is high.
    push  - The "push" command.
    pop   - The "pop" command.

  Outputs:
    sz      - Current number of items in the stack.
    returns - The contents of the top of the stack.

1.3 Map
-------

Description:

  A SZ-entry fully-associative meory holding key/value pairs

  Template parameters:
    K  - Number of bits in key.
    V  - Number of bits in value.
    SZ - Number of entries.

  Inputs:
    qkey  - The key for the primary output.
    dkey  - The key to write or erase.
    d     - The value to be written.
    write - Perform write.
    erase - Remove entry with key "dkey" from map.

  Outputs:
    full    - There are no entries remaining.
    inmap   - There is an entry with key "qkey".
    returns - The value stored at key "qkey".

2 Examples
----------
